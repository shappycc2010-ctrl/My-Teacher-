import express from "express";
import cors from "cors";
import bodyParser from "body-parser";
import multer from "multer";
import path from "path";
import fs from "fs";
import aiRouter from "./ai.js"; // Your AI chat route

const app = express();

// âœ… Middleware
app.use(cors());
app.use(bodyParser.json());
app.use(express.static("public")); // to serve payment.html or images

// âœ… Multer setup for file uploads
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    const uploadDir = "./uploads";
    if (!fs.existsSync(uploadDir)) {
      fs.mkdirSync(uploadDir);
    }
    cb(null, uploadDir);
  },
  filename: function (req, file, cb) {
    cb(null, Date.now() + path.extname(file.originalname));
  }
});

const upload = multer({ storage });

// âœ… API route for chat
app.use("/", aiRouter);

// âœ… API for handling payment proof upload
app.post("/api/payment-proof", upload.single("proof"), (req, res) => {
  if (!req.file) {
    return res.status(400).json({ message: "No file uploaded." });
  }

  res.json({
    message: "âœ… Payment proof received successfully! Mr. Kelly will review your submission.",
    file: req.file.filename
  });
});

// âœ… Serve payment page
app.get("/payment", (req, res) => {
  res.sendFile(path.resolve("payment.html"));
});

// âœ… Default route
app.get("/", (req, res) => {
  res.send("âœ… Mr. Kelly AI server is running fine!");
});

// âœ… Start server
const PORT = process.env.PORT || 10000;
app.listen(PORT, () => console.log(`ğŸš€ Server running on port ${PORT}`));
