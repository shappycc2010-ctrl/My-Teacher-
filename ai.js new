import express from "express";
import OpenAI from "openai";

const router = express.Router();
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

// === Existing chat route ===
router.post("/api/chat", async (req, res) => {
  try {
    const { message, studentName } = req.body;

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        { role: "system", content: "You are Mr. Kelly, a friendly AI teacher who helps students." },
        { role: "user", content: `${studentName}: ${message}` },
      ],
    });

    res.json({ reply: completion.choices[0].message.content });
  } catch (err) {
    console.error("Error:", err);
    res.status(500).json({ error: "Something went wrong with the AI." });
  }
});

// === New: Start Quiz ===
router.post("/api/quiz/start", async (req, res) => {
  try {
    const { studentName, subject } = req.body;

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: `You are Mr. Kelly, a helpful teacher. 
          Create a 5-question quiz for the subject "${subject}". 
          Each question should be numbered, with 4 options (A–D). 
          Keep it concise and interesting. Do not include answers.`,
        },
        { role: "user", content: `${studentName} is ready for a quiz on ${subject}.` },
      ],
    });

    res.json({ quiz: completion.choices[0].message.content });
  } catch (err) {
    console.error("Error:", err);
    res.status(500).json({ error: "Failed to generate quiz." });
  }
});

// === New: Grade Answer ===
router.post("/api/quiz/answer", async (req, res) => {
  try {
    const { studentName, question, answer } = req.body;

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content:
            "You are Mr. Kelly, a patient AI teacher. Grade the student’s quiz answer, tell if it’s correct or wrong, give the correct answer, and a short explanation.",
        },
        {
          role: "user",
          content: `${studentName} answered "${answer}" to the question: "${question}"`,
        },
      ],
    });

    res.json({ feedback: completion.choices[0].message.content });
  } catch (err) {
    console.error("Error:", err);
    res.status(500).json({ error: "Failed to grade answer." });
  }
});

export default router;
