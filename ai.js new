import express from "express";
import OpenAI from "openai";

const router = express.Router();
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

// Store active lessons in memory for now
const activeLessons = {};

router.post("/api/chat", async (req, res) => {
  try {
    const { message, studentName } = req.body;
    const isLessonMode = activeLessons[studentName];

    let systemPrompt = "You are Mr. Kelly, a friendly AI teacher.";
    if (isLessonMode) {
      systemPrompt += ` You are currently teaching ${activeLessons[studentName]}. Keep your responses educational and structured.`;
    }

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        { role: "system", content: systemPrompt },
        { role: "user", content: `${studentName}: ${message}` }
      ]
    });

    res.json({ reply: completion.choices[0].message.content });
  } catch (err) {
    console.error("Error:", err);
    res.status(500).json({ error: "Something went wrong with the AI." });
  }
});

// Start a new lesson
router.post("/api/lesson/start", async (req, res) => {
  const { studentName, subject } = req.body;
  activeLessons[studentName] = subject;

  const startMessage = `Alright ${studentName}, let's begin our lesson on ${subject}! I'll explain the basics first, then ask you a few quiz questions.`;
  res.json({ reply: startMessage });
});

// End a lesson
router.post("/api/lesson/exit", async (req, res) => {
  const { studentName } = req.body;
  delete activeLessons[studentName];
  res.json({ reply: `Good job, ${studentName}! You've completed your lesson. 🏅` });
});

export default router;
