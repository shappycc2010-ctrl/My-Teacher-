// === Phase 8: Dashboard Data ===

// Summary for charts
router.get("/api/dashboard/:studentName", (req, res) => {
  const memory = loadMemory();
  const student = memory[req.params.studentName];
  if (!student)
    return res.status(404).json({ error: "Student not found" });

  const quizScores = student.quizzes.map(q => ({
    subject: q.subject,
    score: q.score,
    date: q.date,
  }));

  const lessonCount = student.history
    .filter(h => h.role === "user").length;

  res.json({
    quizScores,
    lessonCount,
    lastActive: student.history?.slice(-1)[0]?.content || "N/A"
  });
});
